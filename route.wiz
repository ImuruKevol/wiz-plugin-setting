{"route":"menus = []\nmenus.append({\"url\": \"/wiz/admin/setting/status\", \"icon\": \"fas fa-heartbeat\", \"title\": \"System Status\", 'pattern': r'^/wiz/admin/setting/status'})\nmenus.append({\"url\": \"/wiz/admin/setting/configuration\", \"icon\": \"fas fa-cog\", \"title\": \"Configuration\", 'pattern': r'^/wiz/admin/setting/configuration'})\nmenus.append({\"url\": \"/wiz/admin/plugin\", \"icon\": \"fas fa-plug\", \"title\": \"Plugin\", 'pattern': r'^/wiz/admin/plugin'})\nmenus.append({\"url\": \"/wiz/admin/setting/acl\", \"icon\": \"fas fa-shield-alt\", \"title\": \"Access control\", 'pattern': r'^/wiz/admin/setting/acl'})\nmenus.append({\"url\": \"/wiz/admin/setting/onerror\", \"icon\": \"fas fa-exclamation-triangle\", \"title\": \"On error\", 'pattern': r'^/wiz/admin/setting/onerror'})\nmenus.append({\"url\": \"/wiz/admin/setting/onboot\", \"icon\": \"fas fa-power-off\", \"title\": \"On boot\", 'pattern': r'^/wiz/admin/setting/onboot'})\nmenus.append({\"url\": \"/wiz/admin/setting/build_resource\", \"icon\": \"fas fa-filter\", \"title\": \"Build resource\", 'pattern': r'^/wiz/admin/setting/build_resource'})\nmenus.append({\"url\": \"/wiz/admin/setting/after_request\", \"icon\": \"fas fa-filter\", \"title\": \"After Request\", 'pattern': r'^/wiz/admin/setting/after_request'})\n\ndef setting_nav(menus):\n    def itermenu(menu):\n        pt = None\n        if 'pattern' in menu: pt = menu['pattern']\n        elif 'url' in menu: pt = menu['url']\n        if pt is not None:\n            if framework.request.match(pt): menu['class'] = 'active'\n            else: menu['class'] = ''\n        \n    for menu in menus:\n        itermenu(menu)\n    return menus\n\nmenus = setting_nav(menus)\n\nframework.layout('core.theme.layout', navbar=True, monaco=True)\nframework.render(\"status\", \"core.setting.status\", settingmenus=menus)\nframework.render(\"configuration\", \"core.setting.configuration\", settingmenus=menus)\nframework.render(\"acl\", \"core.setting.acl\", settingmenus=menus)\nframework.render(\"onerror\", \"core.setting.onerror\", settingmenus=menus)\nframework.render(\"onboot\", \"core.setting.onboot\", settingmenus=menus)\nframework.render(\"build_resource\", \"core.setting.build_resource\", settingmenus=menus)\nframework.render(\"after_request\", \"core.setting.after_request\", settingmenus=menus)\nframework.response.redirect(\"status\")"}